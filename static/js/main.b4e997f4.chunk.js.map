{"version":3,"sources":["components/collapsible/body/body.js","components/collapsible/head/head.js","components/collapsible/col/col.js","components/collapsible/row/row.js","components/collapsible/collapsible.js","components/collapsible/grid/grid.js","components/components-hoc/track-visibility/track-visibility.js","components/components-hoc/hoc.js","components/footer/footer.js","components/link/link.js","components/paragraph/paragraph.js","components/project/project.js","components/section/section.js","components/skill-bar/skill-bar.js","components/splash/splash.js","components/timeline/timeline.js","components/typewrite/typewrite.js","components/icon-button/icon-button.js","components/tag/tag.js","components/codepen/codepen.js","components/loader/loader.js","components/polyhedrons/polyhedron.js","components/polyhedrons/polyhedron-face.js","components/polyhedrons/polyhedrons.js","containers/about/about.js","containers/experience/experience.js","containers/pens/pens.js","containers/projects/projects.js","containers/skills/skills.js","containers/splash/splash.js","containers/timeline/timeline.js","App.js","serviceWorker.js","index.js"],"names":["Body","props","react_default","a","createElement","className","classnames","expanded","children","Head","React","forwardRef","ref","body","id","expandedId","onClick","onToggle","Col","sm","md","lg","head_head","body_body","isDesktop","displayName","Row","state","headList","headLen","this","length","setState","getBoundingClientRect","top","updateIsDesktop","window","addEventListener","bind","removeEventListener","_this2","Fragment","es_Row","Children","map","child","colId","type","cloneElement","concat","node","push","Component","collapsible","Grid","toggledId","rowId","counter","targetMap","observer","IntersectionObserver","entries","forEach","entry","callback","target","getAttribute","defaultOptions","threshold","unregisterOnIntersect","hoc","trackVisibility","WrappedComponent","options","arguments","undefined","_React$Component","Visibility","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createRef","wasIntersected","isIntersected","updateVisibility","assertThisInitialized","inherits","createClass","key","value","unregisterTarget","registerTarget","unobserve","current","observe","intersectionRatio","Footer","year","Date","getFullYear","icon_button_icon_button","ariaLabel","href","icon","prefix","Link","aria-label","rel","Paragraph","pattern","RegExp","toConsumableArray","links","keys","join","split","paragraph","i","result","results","exec","substring","index","link","components_link_link","label","Project","Card","image","Img","variant","src","alt","title","download","github","Title","description","Text","tools","tool","tag_tag","typeMap","tagMap","Section","theme","Container","headshot","Hoc","level","Splash","style","backgroundImage","defaultData","Timeline","data","width","backgroundColor","color","_i","content","shape","dangerouslySetInnerHTML","__html","IconButton","index_es","Tag","styling","borderColor","accent","Codepen","height","scrolling","hash","themeId","defaultTab","frameBorder","allowtransparency","allowFullScreen","user","Loader","elapsed","maxDots","loaded","error","loadingTextInterval","setInterval","loader","then","onSuccess","clearInterval","onError","dots","visible","animation","loadingText","Polyhedron","animated","parentId","animationChange","PolyhedronFace","subscription","subscribe","next","updateColor","unsubscribe","rgba","x","Math","floor","random","Polyhedrons","Subject","animationInterval","polyhedron_Polyhedron","polyhedrons_polyhedron_face","AboutContainer","section_section","message","text","typewrite_typewrite","paragraph_paragraph","ExperienceContainer","colWidth","experience","details","PensContainer","entriesPerRow","round","Array","ceil","row","start","slice","pen","col","codepen","ProjectsContainer","projects","project","components_project_project","objectSpread","SkillsContainer","groups","group","name","skill","skill_bar_skill_bar","SplashContainer","splash_splash","TimelineContainer","timeline_timeline","App","fetch","response","json","section","sectionData","find","_id","loader_loader","LoadingAnimation","src_containers_splash_splash","splash","about","containers_timeline_timeline","timeline","skills_skills","skills","containers_experience_experience","pens","footer_footer","Boolean","location","hostname","match","library","add","faCogs","faCaretDown","faGlobe","faGamepad","faDownload","faEnvelope","faStar","faGithub","faLinkedin","faCodepen","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4e997f4.chunk.js","sourcesContent":["import './body.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Renders collapsible body component\r\n * \r\n * usage: N/A, only used internally by the Row and Col collapsible components\r\n */\r\nconst Body = (props) => (\r\n  <div className={classnames('body-collapse', (props.expanded ? 'expanded' : ''))}>\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\nexport default Body;","import './head.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Renders collapsible head component\r\n * \r\n * usage: N/A, only used internally by the Col collapsible component\r\n */\r\nconst Head = React.forwardRef((props, ref) => (\r\n  <div ref={ref} className={classnames('head-collapse', (props.body ? 'has-body' : ''), (props.id === props.expandedId ? 'expanded' : ''))} onClick={() => props.body && props.onToggle(props.id)}>\r\n    {props.children}\r\n  </div>\r\n));\r\n\r\nexport default Head;","import React from 'react';\r\nimport { Col as BootstrapCol } from 'react-bootstrap';\r\nimport Body from '../body/body';\r\nimport Head from '../head/head';\r\n\r\n/**\r\n * Renders collapsible column component\r\n * \r\n * usage: <Collapsible.Col body?={...}>...</Collapsible.Col>\r\n */\r\nconst Col = React.forwardRef((props, ref) => (\r\n  <BootstrapCol sm={props.sm} md={props.md} lg={props.lg}>\r\n    <Head ref={ref} id={props.id} expandedId={props.expandedId} onToggle={props.onToggle} body={props.body}>\r\n      {props.children}\r\n    </Head>\r\n    {props.body && (\r\n      <Body expanded={props.id === props.expandedId && !props.isDesktop}>\r\n      {props.body}\r\n      </Body>\r\n    )}\r\n  </BootstrapCol>\r\n));\r\n\r\n// init display name\r\nCol.displayName = 'Collapsible.Col';\r\n\r\nexport default Col;","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { Row as BootstrapRow } from 'react-bootstrap';\r\nimport Body from '../body/body';\r\n\r\n/**\r\n * Row collapsible component\r\n * \r\n * usage: <Collapsible.Row className?=\"W\" id=\"X\" expandedId=\"Y\" onToggle=\"Z\"><Collapsible.Col>...</Collapsible.Col>...</Collapsible.Row>\r\n */\r\nclass Row extends React.Component {\r\n  state = { isDesktop: false, headList: [] };\r\n\r\n  /**\r\n   * Updates whether row expand is in desktop mode\r\n   */\r\n  updateIsDesktop() {\r\n    const headLen = this.state.headList.length;\r\n    if (headLen > 1) {\r\n      this.setState({isDesktop: this.state.headList[0].getBoundingClientRect().top === this.state.headList[headLen - 1].getBoundingClientRect().top});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds window resize event listener\r\n   */\r\n  componentDidMount() {\r\n    this.updateIsDesktop();\r\n    window.addEventListener(\"resize\", this.updateIsDesktop.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Removes window resize event listener\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateIsDesktop.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Renders collapsible row component\r\n   */\r\n  render() {\r\n    return (\r\n      <>\r\n        <BootstrapRow className={classnames(this.props.className)}>\r\n          {React.Children.map(this.props.children || [], (child, colId) => (\r\n            child.type.displayName !== 'Collapsible.Col' ? child : React.cloneElement(child, {\r\n              id: `${this.props.id}-${colId}`,\r\n              expandedId: this.props.expandedId,\r\n              isDesktop: this.state.isDesktop,\r\n              onToggle: this.props.onToggle,\r\n              ref: (node) => node && this.state.headList.push(node)\r\n            })\r\n          ))}\r\n        </BootstrapRow>\r\n        {React.Children.map(this.props.children || [], (child, colId) => (\r\n          child.props.body && (\r\n            <Body expanded={`${this.props.id}-${colId}` === this.props.expandedId && this.state.isDesktop}>\r\n              {child.props.body}\r\n            </Body>\r\n          )\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// init display name\r\nRow.displayName = 'Collapsible.Row';\r\n\r\nexport default Row;","import Col from './col/col';\r\nimport Row from './row/row';\r\nimport Grid from './grid/grid';\r\n\r\n// Collapsible module\r\nexport default {\r\n  Col,\r\n  Row,\r\n  Grid\r\n};","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Grid collapsible component\r\n * \r\n * usage: <Collapsible.Grid className?=\"X\"><Collapsible.Row ...>...</Collapsible.Row>...</Collapsible.Grid>\r\n */\r\nclass Grid extends React.Component {\r\n  state = { expandedId: null };\r\n  \r\n  /**\r\n   * Handles item expand/collapse toggle\r\n   */\r\n  onToggle(toggledId) {\r\n    this.setState({expandedId: this.state.expandedId && this.state.expandedId === toggledId ? null : toggledId});\r\n  }\r\n\r\n  /**\r\n   * Renders grid collapsible component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={classnames(this.props.className)}>\r\n        {React.Children.map(this.props.children || [], (child, rowId) => (\r\n          child.type.displayName !== 'Collapsible.Row' ? child : React.cloneElement(child, {\r\n            id: rowId,\r\n            expandedId: this.state.expandedId,\r\n            onToggle: this.onToggle.bind(this),\r\n          })\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n// visibility element counter\r\nlet counter = 0;\r\n\r\n// Map intersection targetId => updateVisibility callback\r\nconst targetMap = {};\r\n\r\n// Create intersection observer\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n    const callback = targetMap[entry.target.getAttribute('id')];\r\n    if (callback) {\r\n      callback(entry);\r\n    }\r\n  });\r\n});\r\n\r\n// default tracking options\r\nconst defaultOptions = {\r\n  threshold: 0,\r\n  unregisterOnIntersect: false\r\n};\r\n\r\n/**\r\n * \r\n * @param {React.Component} WrappedComponent - the component whose visibility is being tracked \r\n * @param {*} options - the tracking options object\r\n *            options.unregisterOnIntersect - if true, unregisters the element on first intersect (good for components that animate only on first time visible in viewport)\r\n *            options.threshold - the intersectionRatio threshold that defines if element is intersected\r\n */\r\nconst trackVisibility = (WrappedComponent, options = {}) => {\r\n  return class Visibility extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        id: `track-visible-${counter++}`,\r\n        ref: React.createRef(),\r\n        threshold: options.threshold || defaultOptions.threshold,\r\n        wasIntersected: false,\r\n        isIntersected: false,\r\n        unregisterOnIntersect: options.unregisterOnIntersect || defaultOptions.unregisterOnIntersect\r\n      }\r\n      this.updateVisibility = this.updateVisibility.bind(this);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      this.unregisterTarget();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.registerTarget();\r\n    }\r\n\r\n    unregisterTarget() {\r\n      delete targetMap[this.state.id];\r\n      observer.unobserve(this.state.ref.current);\r\n    }\r\n  \r\n    registerTarget() {\r\n      targetMap[this.state.id] = this.updateVisibility;\r\n      observer.observe(this.state.ref.current);\r\n    }\r\n  \r\n    updateVisibility(entry) {\r\n      if (entry.intersectionRatio > this.state.threshold) {\r\n        if (this.state.unregisterOnIntersect) {\r\n          this.setState({wasIntersected: true});\r\n          this.unregisterTarget();\r\n        }\r\n        else {\r\n          this.setState({wasIntersected: true, isIntersected: true});\r\n        }\r\n      }\r\n      else {\r\n        this.setState({isIntersected: false});\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div id={this.state.id} ref={this.state.ref} className={classnames('track-visible', this.state.wasIntersected ? 'was-visible' : '', this.state.isIntersected ? 'is-visible' : '')}>\r\n          <WrappedComponent {...this.props} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default trackVisibility;","import trackVisibility from './track-visibility/track-visibility';\r\n\r\nexport default {\r\n  trackVisibility\r\n}; ","import './footer.scss';\r\nimport React from 'react';\r\nimport { IconButton } from '../components';\r\n\r\n/**\r\n * Renders footer component\r\n * \r\n * usage: <Footer />\r\n */\r\nconst Footer = () => {\r\n  const year = (new Date()).getFullYear();\r\n  return (\r\n    <footer>\r\n      <div>\r\n        <IconButton className=\"footer-button\" ariaLabel=\"Email\" href=\"mailto:alexlipianu@live.ca?subject=Website%20Redirect\" icon=\"envelope\" />\r\n        <IconButton className=\"footer-button\" ariaLabel=\"LinkedIn\" href=\"https://ca.linkedin.com/in/alipianu\" prefix=\"fab\" icon=\"linkedin\" />\r\n        <IconButton className=\"footer-button\" ariaLabel=\"GitHub\" href=\"https://github.com/alipianu\" prefix=\"fab\" icon=\"github\" />\r\n        <IconButton className=\"footer-button\" ariaLabel=\"CodePen\" href=\"https://codepen.io/alipianu/\" prefix=\"fab\" icon=\"codepen\" />\r\n      </div>\r\n      <div>\r\n        <p>@ {year} Alexander Lipianu</p>\r\n        <p>All rights reserved</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import './link.scss';\r\nimport React from 'react';\r\n\r\n/**\r\n * Renders a link component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Link ariaLabel?=\"W\" href?=\"X\" target?=\"Y\" rel?=\"Z\">...</Link>\r\n */\r\nconst Link = (props) => (\r\n  <a className=\"link\"\r\n    aria-label={props.ariaLabel || ''}\r\n    href={props.href || '#'}\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\">\r\n  {props.children}\r\n  </a>\r\n);\r\n\r\nexport default Link;","import React from 'react';\r\nimport Link from '../../components/link/link';\r\n\r\n/**\r\n * Renders paragraph component, for safely rendering text data with urls\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Paragraph links=['X', ...]>...</Paragraph>\r\n */\r\nconst Paragraph = (props) => {\r\n  // link regex pattern\r\n  const pattern = RegExp(`(\\\\{\\\\{(${[...props.links.keys()].join('|')})\\\\}\\\\})`);\r\n  return (\r\n    props.children.split('\\n').map((paragraph, i) => {\r\n      let result = [];\r\n      do {\r\n        const results = pattern.exec(paragraph);\r\n        if (!results) break;\r\n        // create span from text before link\r\n        result.push(<span key={`${i}-${result.length}`}>{paragraph.substring(0, results.index)}</span>);\r\n        // create link\r\n        const link = props.links[results[2]];\r\n        result.push(<Link key={`${i}-${result.length}`} ariaLabel={link.label} href={link.href}>{link.label}</Link>);\r\n        // set new search on text after link\r\n        paragraph = paragraph.substring(results.index + results[0].length);\r\n      } while (paragraph.length > 4)\r\n\r\n      // create span from remaining text\r\n      result.push(<span key={`${i}-${result.length}`}>{paragraph}</span>);\r\n      return <p key={i}>{result}</p>;\r\n    })\r\n  );\r\n};\r\n\r\nexport default Paragraph;","import './project.scss';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { IconButton, Tag } from '../components';\r\n\r\n/**\r\n * Renders project component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Project image?=\"R\" title?=\"S\" description?=\"T\" links?={{download?: 'U', github?: 'V'}} tools?={{..., W: ['X', ...]}} tagMap={{..., W: {color?: 'Y', accent?: 'Z'}}} />\r\n */\r\nconst Project = (props) => (\r\n  <Card className='project'>\r\n    <div>\r\n      {props.image && <Card.Img variant=\"top\" src={props.image} alt={`${props.title} thumbnail`} />}\r\n    </div>\r\n    {props.links && (\r\n      <div className=\"card-buttons\">\r\n        {props.links.download && <IconButton className=\"project-button\" ariaLabel=\"Download\" href={props.links.download} prefix=\"fas\" icon=\"download\" />}\r\n        {props.links.github && <IconButton className=\"project-button\" ariaLabel=\"GitHub\" href={props.links.github} prefix=\"fab\" icon=\"github\" />}\r\n      </div>\r\n    )}\r\n    <Card.Body>\r\n      {props.title && <Card.Title>{props.title}</Card.Title>}\r\n      {props.description && <Card.Text>{props.description}</Card.Text>}\r\n      {props.tools && (\r\n        <div className=\"tools\">\r\n          {Object.keys(props.tools).map((type) => props.tools[type].map((tool, i) => <Tag key={i} type={type} typeMap={props.tagMap} label={tool} />))}\r\n        </div>\r\n      )}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n            \r\nexport default Project;","import './section.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n/**\r\n * Renders section component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Section theme?=\"X\" className?=\"Y\" title?=\"Z\" description?=\"\" headshot?=\"\">...</Section>\r\n */\r\nconst Section = (props) => (\r\n  <section className={classnames(props.theme, props.className)}>\r\n    <Container>\r\n      {props.title && <h2>{props.title}</h2>}\r\n      {props.description && <p>{props.description}</p>}\r\n      {!props.headshot ? props.children : (\r\n        <Row className=\"align-items-center\">\r\n          <Col md={5} lg={4}>\r\n            <img id=\"headshot\" src={props.headshot} className=\"img-responsive img-fluid rounded-circle\" alt=\"headshot\" />\r\n          </Col>\r\n          <Col md={6} lg={7} className=\"offset-md-1\">\r\n            {props.children}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  </section>\r\n);\r\n\r\nexport default Section;","import './skill-bar.scss';\r\nimport React from 'react';\r\nimport { Hoc } from '../components';\r\n\r\n/**\r\n * Renders skillbar component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <SkillBar level?=\"X\" label?=\"Y\" />\r\n */\r\nconst SkillBar = (props) => (\r\n  <div className={`skill skill-${props.level || 'none'}`}>\r\n    {props.label && <div className=\"label\">{props.label}</div>}\r\n    <div className=\"skill-bar\">\r\n      <div className=\"skill-bar-bg\"></div>\r\n      <div className=\"skill-bar-progress\"></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Hoc.trackVisibility(SkillBar, { unregisterOnIntersect: true });","import './splash.scss';\r\nimport React from 'react';\r\n\r\n/**\r\n * Renders splash component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Splash src=\"X\">...</Splash>\r\n */\r\nconst Splash = (props) => (\r\n  <div className=\"splash\" style={{ backgroundImage: `url(${props.src})` }}>\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            {props.children}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nexport default Splash;","import './timeline.scss'\r\nimport React from 'react';\r\n\r\n// data defaults\r\nconst defaultData = {\r\n  color: 'transparent',\r\n  shape: 'circle'\r\n};\r\n\r\n/**\r\n * Renders timeline component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Timeline data={[{year?: 'X', color?: 'Y', entries: [{shape: ('circle' || *), content: 'Z'}, ...]}]} />\r\n */\r\nconst Timeline = (props) => props.data && props.data.length && (\r\n  <ul className=\"timeline\">\r\n    {props.data.map((data, i) => (\r\n      <li key={i} style={{ width: `${100 / props.data.length}%` }}>\r\n        {data.year && <div className=\"timeline-label\">{data.year}</div>}\r\n        <table className=\"timeline-ribbon\">\r\n          <tbody style={{ backgroundColor: data.color || defaultData.color }}>\r\n            <tr style={{ backgroundColor: data.color || defaultData.color }}>\r\n              <th key={0} className=\"ribbon\" style={{ backgroundColor: data.color || defaultData.color }}>\r\n                <div>{/* left of ribbon */}</div>\r\n              </th>\r\n              {data.entries.map((entry, _i) => entry.content && (\r\n                <th key={_i + 1} className=\"ribbon timeline-entry\" style={{ backgroundColor: data.color || defaultData.color }}>\r\n                  <div className={entry.shape || defaultData.shape}>{/* ribbon point */}</div>\r\n                  {/* Dynamically set hover tooltip content and color */}\r\n                  <style dangerouslySetInnerHTML={{\r\n                    __html: `\r\n                      ul.timeline li:nth-child(${i + 1}) th.timeline-entry:nth-child(${_i + 2}) > div:after {\r\n                        content: '${entry.content}';\r\n                        background-color: ${data.color || defaultData.color};\r\n                    `}} />\r\n                </th>\r\n              ))}\r\n              <th key={data.entries.length + 1} className=\"ribbon\" style={{ backgroundColor: data.color || defaultData.color }}>\r\n                <div>{/* right of ribbon */}</div>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Timeline;","import './typewrite.scss';\r\nimport React from 'react';\r\nimport { Hoc } from '../components';\r\n\r\n/**\r\n * Renders typewrite component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Typewrite width=\"X%\">...</Typewrite>\r\n */\r\nconst Typewrite = (props) => (\r\n  <>\r\n    {React.Children.map(props.children, child => (React.cloneElement(child, { className: 'typewrite' })))}\r\n    <style dangerouslySetInnerHTML={{__html: `\r\n      .track-visible.was-visible .typewrite {\r\n        width: ${props.width || '100%'};\r\n      }\r\n    `}} />\r\n  </>\r\n)\r\n\r\nexport default Hoc.trackVisibility(Typewrite, { unregisterOnIntersect: true });","import './icon-button.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n/**\r\n * Renders icon button component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <IconButton ariaLabel?=\"X\" href?=\"Y\" icon=\"Z\" />\r\n */\r\nconst IconButton = (props) => (\r\n  <a className={classnames('icon-button', props.className)}\r\n    aria-label={props.ariaLabel || `${props.icon} button`}\r\n    href={props.href || '#'}\r\n    rel=\"noopener noreferrer\"\r\n    target=\"_blank\">\r\n    <FontAwesomeIcon icon={[props.prefix || 'fas', props.icon]} />\r\n  </a>\r\n);\r\n\r\nexport default IconButton;","import './tag.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Renders tag component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Tag className?=\"V\" type?=\"W\" label?=\"X\" typeMap?={{ color: 'Y', accent: 'X' }} />\r\n */\r\nconst Tag = (props) => {\r\n  const styling = props.typeMap && props.typeMap[props.type];\r\n  return <div style={styling ? { backgroundColor: styling.color, borderColor: styling.accent } : {}} className={classnames('tag', `tag-${props.type || 'none'}`, props.className)}><span>{props.label || ''}</span></div>\r\n};\r\n\r\nexport default Tag;","import React from 'react';\r\n\r\n/**\r\n * Renders codepen embed\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Codepen height=\"U\" title=\"V\" hash=\"W\" themeId=\"X\" defaultTab=\"Y\" user=\"Z\" />\r\n */\r\nconst Codepen = (props) => (\r\n  <iframe height={props.height} style={{ width: '100%' }} scrolling=\"no\" title={props.title} src={`//codepen.io/alipianu/embed/${props.hash}/?height=${props.height}&theme-id=${props.themeId}&default-tab=${props.defaultTab}`} frameBorder=\"no\" allowtransparency=\"true\" allowFullScreen={true}>\r\n    See the Pen <a href={`https://codepen.io/${props.user}/pen/${props.hash}/`}>{props.title}</a>\r\n    by {props.user} (<a href={`https://codepen.io/${props.user}`}>@{props.user}</a>)\r\n        on <a href=\"https://codepen.io\">CodePen</a>.\r\n  </iframe>\r\n);\r\n\r\nexport default Codepen;","import './loader.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Loader component\r\n * \r\n * usage: <Loader loader?={W} animation?={X} onSuccess={Y} onError={Z}>...</Loader>\r\n */\r\nclass Loader extends React.Component {\r\n  state = { elapsed: 0, maxDots: 4, loaded: false, error: null };\r\n\r\n  /**\r\n   * Loads data\r\n   */\r\n  componentDidMount() {\r\n    const loadingTextInterval = setInterval(() => this.setState({elapsed: (this.state.elapsed + 1) % this.state.maxDots}), 2000);\r\n\r\n    if (this.props.loader) {\r\n      this.props.loader().then(\r\n        (result) => {\r\n          if (this.props.onSuccess) {\r\n            this.props.onSuccess(result);\r\n          }\r\n          this.setState({ loaded: true }, () => clearInterval(loadingTextInterval));\r\n        },\r\n        (error) => {\r\n          if (this.props.onError) {\r\n            this.props.onSuccess(error);\r\n          }\r\n          this.setState({ error });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({ loaded: true }, () => clearInterval(loadingTextInterval));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds loading text\r\n   */\r\n  loadingText() {\r\n    let dots = [];\r\n    let visible = false;\r\n    const elapsed = this.state.elapsed;\r\n    for (let i = this.state.maxDots; i > 0; --i) {\r\n      if (!visible && !(elapsed % i) && elapsed !== 0) {\r\n        visible = true;\r\n      }\r\n      dots = [<span key={i} className={classnames('loader-text', !visible ? 'hidden' : '')}>.</span>, ...dots];\r\n    }\r\n    return <><span className=\"loader-text\">Loading</span>{dots}</>;\r\n  }\r\n\r\n  /**\r\n   * Renders loader\r\n   */\r\n  render() {\r\n    return !this.state.error && this.state.loaded ?\r\n      this.props.children :\r\n      <div className={classnames('loader', this.state.error ? 'error' : '', this.state.loaded ? 'loaded' : 'loading')}>\r\n        {this.props.animation && (\r\n          React.createElement(this.props.animation, { title: this.state.error ? <span className=\"loader-text\">ERROR: An error occured</span> : this.loadingText() }))}\r\n      </div>\r\n  }\r\n}\r\n\r\nexport default Loader;","import './polyhedron.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n// shape counter\r\nlet counter = 0;\r\n\r\n/**\r\n * Polyhedron component\r\n */\r\nclass Polyhedron extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = counter++;\r\n  }\r\n\r\n  /**\r\n   * Renders polyhedron\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={classnames('shape', this.props.type, this.props.animated === this.id && 'animated')}>\r\n        {React.Children.map(this.props.children || [], child => (\r\n          React.cloneElement(child, { parentId: this.id, animationChange: this.props.animationChange })\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport { Polyhedron, counter };","import './polyhedron-face.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Polyhedron face component\r\n */\r\nclass PolyhedronFace extends React.Component {\r\n  state = { color: {} };\r\n\r\n  /**\r\n   * Subscribes face to animation change handler\r\n   */\r\n  componentDidMount() {\r\n    this.subscription = this.props.animationChange.subscribe({ next: (id) => this.props.parentId === id && this.updateColor() });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes face to animation change handler\r\n   */\r\n  componentWillUnmount() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Updates face's color\r\n   */\r\n  updateColor() {\r\n    const rgba = () => {\r\n      const x = () => Math.floor(Math.random() * 256);\r\n      return `rgba(${x()}, ${x()}, ${x()}, 0.7)`;\r\n    };\r\n    const color = this.props.type === 'rect' ? { backgroundColor: rgba() } : { borderColor: `transparent transparent ${rgba()} transparent` };\r\n    this.setState({ color });\r\n  }\r\n\r\n  /**\r\n   * Renders face\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={classnames('shape-face', this.props.type)} style={this.state.color}></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PolyhedronFace;","import './polyhedrons.scss';\r\nimport React from 'react';\r\nimport { Subject } from 'rxjs';\r\nimport { Polyhedron, counter } from './polyhedron';\r\nimport Face from './polyhedron-face';\r\n\r\n/**\r\n * Animation container for polyhedrons\r\n */\r\nclass Polyhedrons extends React.Component {\r\n  state = { animated: null, animationChange: new Subject() }\r\n\r\n  /**\r\n   * Sets animation interval\r\n   */\r\n  componentDidMount() {\r\n    this.animationInterval = setInterval(() => {\r\n      do {\r\n        var animated = Math.floor(Math.random() * (counter + 1));\r\n      } while (animated === this.state.animated);\r\n      this.setState({ animated }, () => this.state.animationChange.next(animated));\r\n    }, 11000);\r\n  }\r\n\r\n  /**\r\n   * Destroys animation interval\r\n   */\r\n  componentWillUnmount() {\r\n    clearInterval(this.animationInterval);\r\n  }\r\n\r\n  /**\r\n   * Renders polyhedrons\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"scene\">\r\n        <div className=\"shapes\">\r\n          <Polyhedron type=\"tetrahedron\" animated={this.state.animated} animationChange={this.state.animationChange}>\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n          </Polyhedron>\r\n          <Polyhedron type=\"triang-prism\" animated={this.state.animated} animationChange={this.state.animationChange}>\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face type=\"rect\" />\r\n          </Polyhedron>\r\n          <Polyhedron type=\"cube\" animated={this.state.animated} animationChange={this.state.animationChange}>\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n          </Polyhedron>\r\n          <Polyhedron type=\"octahedron\" animated={this.state.animated} animationChange={this.state.animationChange}>\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n          </Polyhedron>\r\n        </div>\r\n        {this.props.title && <h3>{this.props.title}</h3>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Polyhedrons;","import React from 'react';\r\nimport { Section, Typewrite, Paragraph } from '../../components/components';\r\n\r\n/**\r\n * Renders about section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <AboutContainer title=\"U\" headshot=\"V\" message?={{width?: 'W', text?: 'X'}} description?={{links: ['Y', ...], text?: 'Z'}} />\r\n */\r\nconst AboutContainer = (props) => (\r\n  <Section className=\"about\" theme=\"dark\" title={props.title} headshot={props.headshot}>\r\n    {props.message && props.message.width && props.message.text && (\r\n      <Typewrite width={`${props.message.width}px`}>\r\n        <h4>{props.message.text}</h4>\r\n      </Typewrite>\r\n    )}\r\n    <br />\r\n    <br />\r\n    {props.description && props.description.text && (\r\n      <Paragraph links={props.description.links}>{props.description.text}</Paragraph>\r\n    )}\r\n  </Section>\r\n);\r\n\r\nexport default AboutContainer;","import './experience.scss';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Section, Collapsible } from '../../components/components';\r\n\r\n/**\r\n * Renders experience section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <ExperienceContainer title=\"V\" description=\"W\" data={[{details: 'X', icon: 'Y', label?: 'Z'}, ...]} />\r\n */\r\nconst ExperienceContainer = (props) => {\r\n  const colWidth = Math.floor(12 / props.data.length);\r\n  return (\r\n    <Section theme=\"light\" title={props.title} description={props.description}>\r\n      <Collapsible.Grid className=\"grid-experience\">\r\n        <Collapsible.Row>\r\n          {props.data.map((experience, i) => (\r\n            <Collapsible.Col key={i} md={colWidth} body={experience.details}>\r\n              <FontAwesomeIcon icon={experience.icon} />\r\n              {experience.label && <h5>{experience.label}</h5>}\r\n            </Collapsible.Col>\r\n          ))}\r\n        </Collapsible.Row>\r\n      </Collapsible.Grid>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ExperienceContainer;","import React from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport { Section, Codepen } from '../../components/components';\r\n\r\n/**\r\n * Renders pens section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <PensContainer title=\"V\" description=\"W\" entriesPerRow?={X} data?={[{hash: \"Y\", title: \"Z\" }, ...]} />\r\n */\r\nconst PensContainer = (props) => {\r\n  const entriesPerRow = Math.round(props.entriesPerRow || 0);\r\n  const colWidth = Math.floor(12 / props.entriesPerRow);\r\n  return (\r\n    <Section theme=\"light\" title={props.title} description={props.description}>\r\n      <Container>\r\n          {[...Array(Math.ceil(props.data.length / entriesPerRow)).keys()].map((row) => {\r\n            const start = row * entriesPerRow;\r\n            return (\r\n              <Row key={row} className=\"justify-content-md-center\">\r\n                {props.data.slice(start, start + entriesPerRow).map((pen, col) => (\r\n                  <Col key={col} md={colWidth}>\r\n                    <Codepen title={pen.title} hash={pen.hash} user=\"alipianu\" height={300} defaultTab=\"result\" />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            );\r\n          })}\r\n        </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default PensContainer;","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { Section, Project } from '../../components/components';\r\n\r\n/**\r\n * Renders projects section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <ProjectsContainer entriesPerRow?={X} title=\"Y\" description=\"Z\" data={{projects: [...], tagMap: ...}} />\r\n */\r\n\r\n const ProjectsContainer = (props) => {\r\n  const entriesPerRow = Math.round(props.entriesPerRow || 0);\r\n  const colWidth = Math.floor(12 / props.entriesPerRow);\r\n  return (\r\n    <Section theme=\"dark\" title={props.title} description={props.description}>\r\n      <Container>\r\n        {[...Array(Math.ceil(props.data.projects.length / entriesPerRow)).keys()].map((row) => {\r\n          const start = row * entriesPerRow;\r\n          return (\r\n            <Row key={row} className=\"justify-content-md-center\">\r\n              {props.data.projects.slice(start, start + entriesPerRow).map((project, col) => (\r\n                <Col key={col} md={colWidth}>\r\n                  <Project {...{...project, tagMap: props.data.tagMap}} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          );\r\n        })}\r\n      </Container>\r\n    </Section>\r\n  );\r\n };\r\n\r\nexport default ProjectsContainer;","import './skills.scss';\r\nimport React from 'react';\r\nimport { Section, Collapsible, SkillBar } from '../../components/components';\r\n\r\n/**\r\n * Renders skills section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <SkillsContainer entriesPerRow?=\"X\" title=\"X\" description=\"Y\" groups={[{name: 'Z', data: [...]}, ...]} />\r\n */\r\nconst SkillsContainer = (props) => {\r\n  const entriesPerRow = Math.round(props.entriesPerRow || 0);\r\n  const colWidth = Math.floor(12 / entriesPerRow);\r\n  return (\r\n    <Section theme=\"dark\" title={props.title} description={props.description}>\r\n      <Collapsible.Grid className=\"grid-skills\">\r\n        {props.groups.map((group) => (\r\n          [<h6>{group.name}</h6>, ...[...Array(Math.ceil(group.data.length / entriesPerRow)).keys()].map((row) => {\r\n            const start = row * entriesPerRow;\r\n            return (\r\n              <Collapsible.Row key={row}>\r\n                {group.data.slice(start, start + entriesPerRow).map((skill, col) => (\r\n                  <Collapsible.Col key={col} md={colWidth} body={skill.details}>\r\n                    <SkillBar label={skill.label} level={skill.level} />\r\n                  </Collapsible.Col>\r\n                ))}\r\n              </Collapsible.Row>\r\n            );\r\n          })]\r\n        ))}\r\n      </Collapsible.Grid>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default SkillsContainer;","import './splash.scss';\r\nimport React from 'react';\r\nimport { Splash } from '../../components/components';\r\n\r\n/**\r\n * Renders splash section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <SplashContainer name?=\"X\" title?=\"Y\" src=\"Z\" />\r\n */\r\nconst SplashContainer = (props) => (\r\n  <Splash src={props.src}>\r\n    <h1 id=\"name\">{props.name || ''}</h1>\r\n    <p id=\"title\">{props.title || ''}</p>\r\n  </Splash>\r\n);\r\n\r\nexport default SplashContainer;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Timeline, Section } from '../../components/components';\r\n\r\n/**\r\n * Renders timeline section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <TimelineContainer title=\"V\" description=\"W\" data={[{year?: 'X', color?: 'Y', entries: [{shape: ('circle' || *), content: 'Z'}, ...]}]} />\r\n */\r\nconst TimelineContainer = (props) => (\r\n  <Section theme=\"light\" title={props.title} description={props.description}>\r\n    <Container>\r\n      <Timeline data={props.data} />\r\n    </Container>\r\n  </Section>\r\n);\r\n\r\nexport default TimelineContainer;","import './App.scss';\nimport React from 'react';\nimport { Loader, Footer, LoadingAnimation } from './components/components';\nimport {\n  SplashContainer,\n  AboutContainer,\n  TimelineContainer,\n  SkillsContainer,\n  ExperienceContainer,\n  ProjectsContainer,\n  PensContainer,\n} from './containers/containers';\n\n/**\n * App component\n */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: null };\n    this.loader = this.loader.bind(this);\n    this.onSuccess = this.onSuccess.bind(this);\n  }\n\n  /**\n   * Fetch app data\n   */\n  loader() {\n    return fetch('https://api.alexlipianu.com').then((response) => response.json());\n  }\n\n  /**\n   * Load data into containers\n   */\n  onSuccess(result) {\n    const data = {};\n    const sections = ['splash', 'about', 'timeline', 'skills', 'experience', 'projects', 'pens'];\n    sections.forEach((section) => {\n      const sectionData = result.find((x) => x._id === section);\n      if (sectionData) {\n        data[section] = sectionData;\n      }\n    });\n    this.setState({ data });\n  }\n\n  /**\n   * Renders app\n   */\n  render() {\n    return (\n      <Loader loader={this.loader} animation={LoadingAnimation} onSuccess={this.onSuccess} onError={this.onError}>\n        {this.state.data && <>\n          <SplashContainer {...this.state.data.splash} />\n          <AboutContainer {...this.state.data.about} />\n          <TimelineContainer {...this.state.data.timeline} />\n          <SkillsContainer {...this.state.data.skills} />\n          <ExperienceContainer {...this.state.data.experience} />\n          <ProjectsContainer {...this.state.data.projects} />\n          <PensContainer {...this.state.data.pens} />\n          <Footer />\n        </>}\n      </Loader>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// build font awesome library\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCogs, faCaretDown, faGlobe, faGamepad, faDownload, faEnvelope, faStar } from '@fortawesome/free-solid-svg-icons'\nimport { faGithub, faLinkedin, faCodepen } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(\n  // solid\n  faCogs, faCaretDown, faGlobe, faGamepad, faDownload, faEnvelope, faStar,\n  // brands\n  faGithub, faLinkedin, faCodepen\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}