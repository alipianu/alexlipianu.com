{"version":3,"sources":["general/request.js","models/Static.js","components/collapsible/body/body.js","components/collapsible/head/head.js","components/collapsible/col/col.js","components/collapsible/row/row.js","components/collapsible/collapsible.js","components/collapsible/grid/grid.js","components/components-hoc/track-visibility/track-visibility.js","components/components-hoc/hoc.js","components/footer/footer.js","components/link/link.js","components/paragraph/paragraph.js","components/project/project.js","components/section/section.js","components/skill-bar/skill-bar.js","components/splash/splash.js","components/timeline/timeline.js","components/typewrite/typewrite.js","components/icon-button/icon-button.js","components/tag/tag.js","components/codepen/codepen.js","components/loader/loader.js","components/polyhedrons/polyhedron.js","components/polyhedrons/polyhedron-face.js","components/polyhedrons/polyhedrons.js","containers/about/about.js","containers/experience/experience.js","containers/pens/pens.js","containers/projects/projects.js","containers/skills/skills.js","containers/splash/splash.js","containers/timeline/timeline.js","App.js","serviceWorker.js","index.js"],"names":["request","service","arguments","length","undefined","path","fetch","concat","config","api","redirect","then","response","result","json","ok","err","Promise","reject","Static","contentID","version","replace","Body","props","react_default","a","createElement","className","classnames","expanded","children","Head","React","forwardRef","ref","body","id","expandedId","onClick","onToggle","Col","sm","md","lg","head_head","body_body","isDesktop","displayName","Row","state","headList","headLen","this","setState","getBoundingClientRect","top","updateIsDesktop","window","addEventListener","bind","removeEventListener","_this2","Fragment","es_Row","Children","map","child","colId","type","cloneElement","node","push","Component","collapsible","Grid","toggledId","rowId","counter","targetMap","observer","IntersectionObserver","entries","forEach","entry","callback","target","getAttribute","defaultOptions","threshold","unregisterOnIntersect","hoc","trackVisibility","WrappedComponent","options","_React$Component","Visibility","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createRef","wasIntersected","isIntersected","updateVisibility","assertThisInitialized","inherits","createClass","key","value","unregisterTarget","registerTarget","unobserve","current","observe","intersectionRatio","Footer","year","Date","getFullYear","icon_button_icon_button","ariaLabel","href","icon","prefix","Link","aria-label","rel","Paragraph","pattern","RegExp","toConsumableArray","links","keys","join","split","paragraph","i","results","exec","substring","index","link","components_link_link","label","Project","Card","image","Img","variant","src","alt","title","download","github","Title","description","Text","tools","tool","tag_tag","typeMap","tagMap","Section","theme","Container","headshot","Hoc","level","Splash","style","backgroundImage","defaultData","Timeline","data","width","backgroundColor","color","_i","content","shape","dangerouslySetInnerHTML","__html","IconButton","index_es","Tag","styling","borderColor","accent","Codepen","height","scrolling","hash","themeId","defaultTab","frameBorder","allowtransparency","allowFullScreen","user","Loader","elapsed","maxDots","loaded","error","loadingTextInterval","setInterval","loader","onSuccess","clearInterval","onError","dots","visible","animation","errorMessage","loadingText","Polyhedron","animated","parentId","animationChange","PolyhedronFace","subscription","subscribe","next","updateColor","unsubscribe","rgba","x","Math","floor","random","rand","min","max","randKeyframe","fromTransform","toTranform","Polyhedrons","Subject","keyframe","startShape","animationInterval","polyhedron_Polyhedron","polyhedrons_polyhedron_face","AboutContainer","section_section","message","text","typewrite_typewrite","paragraph_paragraph","ExperienceContainer","colWidth","experience","details","PensContainer","entriesPerRow","round","Array","ceil","row","start","slice","pen","col","codepen_codepen","ProjectsContainer","projects","project","components_project_project","objectSpread","SkillsContainer","groups","group","name","skill","isArray","detail","skill_bar_skill_bar","SplashContainer","splash_splash","TimelineContainer","timeline_timeline","App","_contentID","_ref","components_loader_loader","LoadingAnimation","src_containers_splash_splash","splash","about","containers_timeline_timeline","timeline","skills_skills","skills","containers_experience_experience","pens","footer_footer","Boolean","location","hostname","match","library","add","faCogs","faCaretDown","faGlobe","faGamepad","faDownload","faEnvelope","faStar","faGithub","faLinkedin","faCodepen","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c71e61ab.chunk.js","sourcesContent":["import config from '../config';\r\n\r\n/**\r\n * GET request\r\n * @param {String} path the request path\r\n * @returns {Promise} the request\r\n */\r\nconst get = (service = '', path = '') => {\r\n  return fetch(`${config.api}/${service}${path}`, { redirect: 'follow' })\r\n    .then((response) => {\r\n      let result = response.json();\r\n      if (!response.ok) result = result.then((err) => Promise.reject(err));\r\n      return result;\r\n    });\r\n};\r\n\r\n/**\r\n * POST request\r\n * @param {String} path the request path\r\n * @param {*} data the request body\r\n * @returns {Promise} the request\r\n */\r\nconst post = (service = '', path = '', data = {}) => {\r\n  return fetch(`${config.api}/${service}${path}`, {\r\n    method: 'POST',\r\n    cache: 'no-cache',\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n    body: Object.keys(data).map((field) => `${encodeURIComponent(field)}=${encodeURIComponent(data[field])}`).join('&'),\r\n    redirect: 'follow',\r\n    credentials: 'include'\r\n  })\r\n    .then((response) => {\r\n      let result = response.json();\r\n      if (!response.ok) result = result.then((err) => Promise.reject(err));\r\n      return result;\r\n    });\r\n};\r\n\r\n/**\r\n * Send beacon\r\n * @param {String} path the request path\r\n * @param {String} data the request data\r\n */\r\nconst beacon = (service = '', path = '', data = '') => {\r\n  navigator.sendBeacon(`${config.api}/${service}${path}`, data);\r\n};\r\n\r\nexport default {\r\n  get, post, beacon\r\n};","import request from '../general/request';\r\nimport config from '../config.json';\r\n\r\n/**\r\n * Get content\r\n * @param {number} contentID - the content ID\r\n * @returns {Promise} the content request\r\n */\r\nexport const getContent = (contentID) => request.get('v1/static', `/content/${contentID}/version/${config.version.replace(/\\./g, '0')}`);\r\n\r\nexport default {\r\n  getContent\r\n};","import './body.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Renders collapsible body component\r\n * \r\n * usage: N/A, only used internally by the Row and Col collapsible components\r\n */\r\nconst Body = (props) => (\r\n  <div className={classnames('body-collapse', (props.expanded ? 'expanded' : ''))}>\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\nexport default Body;","import './head.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Renders collapsible head component\r\n * \r\n * usage: N/A, only used internally by the Col collapsible component\r\n */\r\nconst Head = React.forwardRef((props, ref) => (\r\n  <div ref={ref} className={classnames('head-collapse', (props.body ? 'has-body' : ''), (props.id === props.expandedId ? 'expanded' : ''))} onClick={() => props.body && props.onToggle(props.id)}>\r\n    {props.children}\r\n  </div>\r\n));\r\n\r\nexport default Head;","import React from 'react';\r\nimport { Col as BootstrapCol } from 'react-bootstrap';\r\nimport Body from '../body/body';\r\nimport Head from '../head/head';\r\n\r\n/**\r\n * Renders collapsible column component\r\n * \r\n * usage: <Collapsible.Col body?={...}>...</Collapsible.Col>\r\n */\r\nconst Col = React.forwardRef((props, ref) => (\r\n  <BootstrapCol sm={props.sm} md={props.md} lg={props.lg}>\r\n    <Head ref={ref} id={props.id} expandedId={props.expandedId} onToggle={props.onToggle} body={props.body}>\r\n      {props.children}\r\n    </Head>\r\n    {props.body && (\r\n      <Body expanded={props.id === props.expandedId && !props.isDesktop}>\r\n      {props.body}\r\n      </Body>\r\n    )}\r\n  </BootstrapCol>\r\n));\r\n\r\n// init display name\r\nCol.displayName = 'Collapsible.Col';\r\n\r\nexport default Col;","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { Row as BootstrapRow } from 'react-bootstrap';\r\nimport Body from '../body/body';\r\n\r\n/**\r\n * Row collapsible component\r\n * \r\n * usage: <Collapsible.Row className?=\"W\" id=\"X\" expandedId=\"Y\" onToggle=\"Z\"><Collapsible.Col>...</Collapsible.Col>...</Collapsible.Row>\r\n */\r\nclass Row extends React.Component {\r\n  state = { isDesktop: false, headList: [] };\r\n\r\n  /**\r\n   * Updates whether row expand is in desktop mode\r\n   */\r\n  updateIsDesktop() {\r\n    const headLen = this.state.headList.length;\r\n    if (headLen > 1) {\r\n      this.setState({isDesktop: this.state.headList[0].getBoundingClientRect().top === this.state.headList[headLen - 1].getBoundingClientRect().top});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds window resize event listener\r\n   */\r\n  componentDidMount() {\r\n    this.updateIsDesktop();\r\n    window.addEventListener(\"resize\", this.updateIsDesktop.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Removes window resize event listener\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateIsDesktop.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Renders collapsible row component\r\n   */\r\n  render() {\r\n    return (\r\n      <>\r\n        <BootstrapRow className={classnames(this.props.className)}>\r\n          {React.Children.map(this.props.children || [], (child, colId) => (\r\n            child.type.displayName !== 'Collapsible.Col' ? child : React.cloneElement(child, {\r\n              id: `${this.props.id}-${colId}`,\r\n              expandedId: this.props.expandedId,\r\n              isDesktop: this.state.isDesktop,\r\n              onToggle: this.props.onToggle,\r\n              ref: (node) => node && this.state.headList.push(node)\r\n            })\r\n          ))}\r\n        </BootstrapRow>\r\n        {React.Children.map(this.props.children || [], (child, colId) => (\r\n          child.props.body && (\r\n            <Body expanded={`${this.props.id}-${colId}` === this.props.expandedId && this.state.isDesktop}>\r\n              {child.props.body}\r\n            </Body>\r\n          )\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// init display name\r\nRow.displayName = 'Collapsible.Row';\r\n\r\nexport default Row;","import Col from './col/col';\r\nimport Row from './row/row';\r\nimport Grid from './grid/grid';\r\n\r\n// Collapsible module\r\nexport default {\r\n  Col,\r\n  Row,\r\n  Grid\r\n};","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Grid collapsible component\r\n * \r\n * usage: <Collapsible.Grid className?=\"X\"><Collapsible.Row ...>...</Collapsible.Row>...</Collapsible.Grid>\r\n */\r\nclass Grid extends React.Component {\r\n  state = { expandedId: null };\r\n  \r\n  /**\r\n   * Handles item expand/collapse toggle\r\n   */\r\n  onToggle(toggledId) {\r\n    this.setState({expandedId: this.state.expandedId && this.state.expandedId === toggledId ? null : toggledId});\r\n  }\r\n\r\n  /**\r\n   * Renders grid collapsible component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={classnames(this.props.className)}>\r\n        {React.Children.map(this.props.children || [], (child, rowId) => (\r\n          child.type.displayName !== 'Collapsible.Row' ? child : React.cloneElement(child, {\r\n            id: rowId,\r\n            expandedId: this.state.expandedId,\r\n            onToggle: this.onToggle.bind(this),\r\n          })\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n// visibility element counter\r\nlet counter = 0;\r\n\r\n// Map intersection targetId => updateVisibility callback\r\nconst targetMap = {};\r\n\r\n// Create intersection observer\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n    const callback = targetMap[entry.target.getAttribute('id')];\r\n    if (callback) {\r\n      callback(entry);\r\n    }\r\n  });\r\n});\r\n\r\n// default tracking options\r\nconst defaultOptions = {\r\n  threshold: 0,\r\n  unregisterOnIntersect: false\r\n};\r\n\r\n/**\r\n * \r\n * @param {React.Component} WrappedComponent - the component whose visibility is being tracked \r\n * @param {*} options - the tracking options object\r\n *            options.unregisterOnIntersect - if true, unregisters the element on first intersect (good for components that animate only on first time visible in viewport)\r\n *            options.threshold - the intersectionRatio threshold that defines if element is intersected\r\n */\r\nconst trackVisibility = (WrappedComponent, options = {}) => {\r\n  return class Visibility extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        id: `track-visible-${counter++}`,\r\n        ref: React.createRef(),\r\n        threshold: options.threshold || defaultOptions.threshold,\r\n        wasIntersected: false,\r\n        isIntersected: false,\r\n        unregisterOnIntersect: options.unregisterOnIntersect || defaultOptions.unregisterOnIntersect\r\n      }\r\n      this.updateVisibility = this.updateVisibility.bind(this);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      this.unregisterTarget();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.registerTarget();\r\n    }\r\n\r\n    unregisterTarget() {\r\n      delete targetMap[this.state.id];\r\n      observer.unobserve(this.state.ref.current);\r\n    }\r\n  \r\n    registerTarget() {\r\n      targetMap[this.state.id] = this.updateVisibility;\r\n      observer.observe(this.state.ref.current);\r\n    }\r\n  \r\n    updateVisibility(entry) {\r\n      if (entry.intersectionRatio > this.state.threshold) {\r\n        if (this.state.unregisterOnIntersect) {\r\n          this.setState({wasIntersected: true});\r\n          this.unregisterTarget();\r\n        }\r\n        else {\r\n          this.setState({wasIntersected: true, isIntersected: true});\r\n        }\r\n      }\r\n      else {\r\n        this.setState({isIntersected: false});\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div id={this.state.id} ref={this.state.ref} className={classnames('track-visible', this.state.wasIntersected ? 'was-visible' : '', this.state.isIntersected ? 'is-visible' : '')}>\r\n          <WrappedComponent {...this.props} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default trackVisibility;","import trackVisibility from './track-visibility/track-visibility';\r\n\r\nexport default {\r\n  trackVisibility\r\n}; ","import './footer.scss';\r\nimport React from 'react';\r\nimport { IconButton } from '../components';\r\n\r\n/**\r\n * Renders footer component\r\n * \r\n * usage: <Footer />\r\n */\r\nconst Footer = () => {\r\n  const year = (new Date()).getFullYear();\r\n  return (\r\n    <footer>\r\n      <div>\r\n        <IconButton className=\"footer-button\" ariaLabel=\"Email\" href=\"mailto:alexlipianu@live.ca?subject=Website%20Redirect\" icon=\"envelope\" />\r\n        <IconButton className=\"footer-button\" ariaLabel=\"LinkedIn\" href=\"https://ca.linkedin.com/in/alipianu\" prefix=\"fab\" icon=\"linkedin\" />\r\n        <IconButton className=\"footer-button\" ariaLabel=\"GitHub\" href=\"https://github.com/alipianu\" prefix=\"fab\" icon=\"github\" />\r\n        <IconButton className=\"footer-button\" ariaLabel=\"CodePen\" href=\"https://codepen.io/alipianu/\" prefix=\"fab\" icon=\"codepen\" />\r\n      </div>\r\n      <div>\r\n        <p>@ {year} Alexander Lipianu</p>\r\n        <p>All rights reserved</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import './link.scss';\r\nimport React from 'react';\r\n\r\n/**\r\n * Renders a link component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Link ariaLabel?=\"W\" href?=\"X\" target?=\"Y\" rel?=\"Z\">...</Link>\r\n */\r\nconst Link = (props) => (\r\n  <a className=\"link\"\r\n    aria-label={props.ariaLabel || ''}\r\n    href={props.href || '#'}\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\">\r\n  {props.children}\r\n  </a>\r\n);\r\n\r\nexport default Link;","import React from 'react';\r\nimport Link from '../../components/link/link';\r\n\r\n/**\r\n * Renders paragraph component, for safely rendering text data with urls\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Paragraph links=['X', ...]>...</Paragraph>\r\n */\r\nconst Paragraph = (props) => {\r\n  // link regex pattern\r\n  const pattern = RegExp(`(\\\\{\\\\{(${[...props.links.keys()].join('|')})\\\\}\\\\})`);\r\n  return (\r\n    props.children.split('\\n').map((paragraph, i) => {\r\n      let result = [];\r\n      do {\r\n        const results = pattern.exec(paragraph);\r\n        if (!results) break;\r\n        // create span from text before link\r\n        result.push(<span key={`${i}-${result.length}`}>{paragraph.substring(0, results.index)}</span>);\r\n        // create link\r\n        const link = props.links[results[2]];\r\n        result.push(<Link key={`${i}-${result.length}`} ariaLabel={link.label} href={link.href}>{link.label}</Link>);\r\n        // set new search on text after link\r\n        paragraph = paragraph.substring(results.index + results[0].length);\r\n      } while (paragraph.length > 4)\r\n\r\n      // create span from remaining text\r\n      result.push(<span key={`${i}-${result.length}`}>{paragraph}</span>);\r\n      return <p key={i}>{result}</p>;\r\n    })\r\n  );\r\n};\r\n\r\nexport default Paragraph;","import './project.scss';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { IconButton, Tag } from '../components';\r\n\r\n/**\r\n * Renders project component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Project image?=\"R\" title?=\"S\" description?=\"T\" links?={{download?: 'U', github?: 'V'}} tools?={{..., W: ['X', ...]}} tagMap={{..., W: {color?: 'Y', accent?: 'Z'}}} />\r\n */\r\nconst Project = (props) => (\r\n  <Card className='project'>\r\n    <div>\r\n      {props.image && <Card.Img variant=\"top\" src={props.image} alt={`${props.title} thumbnail`} />}\r\n    </div>\r\n    {props.links && (\r\n      <div className=\"card-buttons\">\r\n        {props.links.download && <IconButton className=\"project-button\" ariaLabel=\"Download\" href={props.links.download} prefix=\"fas\" icon=\"download\" />}\r\n        {props.links.github && <IconButton className=\"project-button\" ariaLabel=\"GitHub\" href={props.links.github} prefix=\"fab\" icon=\"github\" />}\r\n      </div>\r\n    )}\r\n    <Card.Body>\r\n      {props.title && <Card.Title>{props.title}</Card.Title>}\r\n      {props.description && <Card.Text>{props.description}</Card.Text>}\r\n      {props.tools && (\r\n        <div className=\"tools\">\r\n          {Object.keys(props.tools).map((type) => props.tools[type].map((tool, i) => <Tag key={i} type={type} typeMap={props.tagMap} label={tool} />))}\r\n        </div>\r\n      )}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n            \r\nexport default Project;","import './section.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n/**\r\n * Renders section component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Section theme?=\"X\" className?=\"Y\" title?=\"Z\" description?=\"\" headshot?=\"\">...</Section>\r\n */\r\nconst Section = (props) => (\r\n  <section className={classnames(props.theme, props.className)}>\r\n    <Container>\r\n      {props.title && <h2>{props.title}</h2>}\r\n      {props.description && <p>{props.description}</p>}\r\n      {!props.headshot ? props.children : (\r\n        <Row className=\"align-items-center\">\r\n          <Col md={5} lg={4}>\r\n            <img src={props.headshot} className=\"headshot\" alt=\"headshot\" />\r\n          </Col>\r\n          <Col md={6} lg={7} className=\"offset-md-1\">\r\n            {props.children}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  </section>\r\n);\r\n\r\nexport default Section;","import './skill-bar.scss';\r\nimport React from 'react';\r\nimport { Hoc } from '../components';\r\n\r\n/**\r\n * Renders skillbar component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <SkillBar level?=\"X\" label?=\"Y\" />\r\n */\r\nconst SkillBar = (props) => (\r\n  <div className={`skill skill-${props.level || 'none'}`}>\r\n    {props.label && <div className=\"label\">{props.label}</div>}\r\n    <div className=\"skill-bar\"><div></div></div>\r\n  </div>\r\n);\r\n\r\nexport default Hoc.trackVisibility(SkillBar, { unregisterOnIntersect: true });","import './splash.scss';\r\nimport React from 'react';\r\n\r\n/**\r\n * Renders splash component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Splash src=\"X\">...</Splash>\r\n */\r\nconst Splash = (props) => (\r\n  <div className=\"splash\" style={{ backgroundImage: `url(${props.src})` }}>\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            {props.children}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nexport default Splash;","import './timeline.scss'\r\nimport React from 'react';\r\n\r\n// data defaults\r\nconst defaultData = {\r\n  color: 'transparent',\r\n  shape: 'circle'\r\n};\r\n\r\n/**\r\n * Renders timeline component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Timeline data={[{year?: 'X', color?: 'Y', entries: [{shape: ('circle' || *), content: 'Z'}, ...]}]} />\r\n */\r\nconst Timeline = (props) => props.data && props.data.length && (\r\n  <ul className=\"timeline\">\r\n    {props.data.map((data, i) => (\r\n      <li key={i} style={{ width: `${100 / props.data.length}%` }}>\r\n        {data.year && <div className=\"timeline-label\">{data.year}</div>}\r\n        <table className=\"timeline-ribbon\">\r\n          <tbody style={{ backgroundColor: data.color || defaultData.color }}>\r\n            <tr style={{ backgroundColor: data.color || defaultData.color }}>\r\n              <th key={0} className=\"ribbon\" style={{ backgroundColor: data.color || defaultData.color }}>\r\n                <div>{/* left of ribbon */}</div>\r\n              </th>\r\n              {data.entries.map((entry, _i) => entry.content && (\r\n                <th key={_i + 1} className=\"ribbon timeline-entry\" style={{ backgroundColor: data.color || defaultData.color }}>\r\n                  <div className={entry.shape || defaultData.shape}>{/* ribbon point */}</div>\r\n                  {/* Dynamically set hover tooltip content and color */}\r\n                  <style dangerouslySetInnerHTML={{\r\n                    __html: `\r\n                      ul.timeline li:nth-child(${i + 1}) th.timeline-entry:nth-child(${_i + 2}) > div:after {\r\n                        content: '${entry.content}';\r\n                        background-color: ${data.color || defaultData.color};\r\n                    `}} />\r\n                </th>\r\n              ))}\r\n              <th key={data.entries.length + 1} className=\"ribbon\" style={{ backgroundColor: data.color || defaultData.color }}>\r\n                <div>{/* right of ribbon */}</div>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Timeline;","import './typewrite.scss';\r\nimport React from 'react';\r\nimport { Hoc } from '../components';\r\n\r\n/**\r\n * Renders typewrite component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Typewrite width=\"X%\">...</Typewrite>\r\n */\r\nconst Typewrite = (props) => (\r\n  <>\r\n    {React.Children.map(props.children, child => (React.cloneElement(child, { className: 'typewrite' })))}\r\n    <style dangerouslySetInnerHTML={{__html: `\r\n      .track-visible.was-visible .typewrite {\r\n        width: ${props.width || '100%'};\r\n      }\r\n    `}} />\r\n  </>\r\n)\r\n\r\nexport default Hoc.trackVisibility(Typewrite, { unregisterOnIntersect: true });","import './icon-button.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n/**\r\n * Renders icon button component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <IconButton ariaLabel?=\"X\" href?=\"Y\" icon=\"Z\" />\r\n */\r\nconst IconButton = (props) => (\r\n  <a className={classnames('icon-button', props.className)}\r\n    aria-label={props.ariaLabel || `${props.icon} button`}\r\n    href={props.href || '#'}\r\n    rel=\"noopener noreferrer\"\r\n    target=\"_blank\">\r\n    <FontAwesomeIcon icon={[props.prefix || 'fas', props.icon]} />\r\n  </a>\r\n);\r\n\r\nexport default IconButton;","import './tag.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Renders tag component\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Tag className?=\"V\" type?=\"W\" label?=\"X\" typeMap?={{ color: 'Y', accent: 'X' }} />\r\n */\r\nconst Tag = (props) => {\r\n  const styling = props.typeMap && props.typeMap[props.type];\r\n  return <div style={styling ? { backgroundColor: styling.color, borderColor: styling.accent } : {}} className={classnames('tag', `tag-${props.type || 'none'}`, props.className)}><span>{props.label || ''}</span></div>\r\n};\r\n\r\nexport default Tag;","import './codepen.scss';\r\nimport React from 'react';\r\n\r\n/**\r\n * Renders codepen embed\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <Codepen height=\"U\" title=\"V\" hash=\"W\" themeId=\"X\" defaultTab=\"Y\" user=\"Z\" />\r\n */\r\nconst Codepen = (props) => (\r\n  <div className=\"codepen\">\r\n    <iframe height={props.height} style={{ width: '100%' }} scrolling=\"no\" title={props.title} src={`//codepen.io/alipianu/embed/${props.hash}/?height=${props.height}&theme-id=${props.themeId}&default-tab=${props.defaultTab}`} frameBorder=\"no\" allowtransparency=\"true\" allowFullScreen={true}>\r\n      See the Pen <a href={`https://codepen.io/${props.user}/pen/${props.hash}/`}>{props.title}</a>\r\n      by {props.user} (<a href={`https://codepen.io/${props.user}`}>@{props.user}</a>)\r\n          on <a href=\"https://codepen.io\">CodePen</a>.\r\n    </iframe>\r\n  </div>\r\n);\r\n\r\nexport default Codepen;","import './loader.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst defaultError = 'An unexpected error has occured';\r\n\r\n/**\r\n * Loader component\r\n * \r\n * usage: <Loader loader?={W} animation?={X} onSuccess={Y} onError={Z}>...</Loader>\r\n */\r\nclass Loader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { elapsed: 0, maxDots: 4, loaded: false, error: null };\r\n  }\r\n\r\n  /**\r\n   * Loads data\r\n   */\r\n  componentDidMount() {\r\n    const loadingTextInterval = setInterval(() => this.setState({elapsed: (this.state.elapsed + 1) % this.state.maxDots}), 2000);\r\n\r\n    if (this.props.loader) {\r\n      this.props.loader().then(\r\n        (result) => {\r\n          if (this.props.onSuccess) {\r\n            this.props.onSuccess(result);\r\n          }\r\n          this.setState({ loaded: true }, () => clearInterval(loadingTextInterval));\r\n        },\r\n        (error) => {\r\n          if (this.props.onError) {\r\n            this.props.onSuccess(error);\r\n          }\r\n          this.setState({ error }, () => clearInterval(loadingTextInterval));\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({ loaded: true }, () => clearInterval(loadingTextInterval));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds loading text\r\n   */\r\n  loadingText() {\r\n    let dots = [];\r\n    let visible = false;\r\n    const elapsed = this.state.elapsed;\r\n    for (let i = this.state.maxDots; i > 0; --i) {\r\n      if (!visible && !(elapsed % i) && elapsed !== 0) {\r\n        visible = true;\r\n      }\r\n      dots = [<span key={i} className={classnames('loader-text', !visible ? 'hidden' : '')}>.</span>, ...dots];\r\n    }\r\n    return <><span className=\"loader-text\">LOADING</span>{dots}</>;\r\n  }\r\n\r\n  /**\r\n   * Renders loader\r\n   */\r\n  render() {\r\n    return !this.state.error && this.state.loaded ?\r\n      this.props.children :\r\n      <div className={classnames('loader', this.state.error ? 'error' : '', this.state.loaded ? 'loaded' : 'loading')}>\r\n        {this.props.animation && (\r\n          React.createElement(this.props.animation, { title: this.state.error ? <><h2 className=\"loader-text\">ERROR:</h2><p className=\"loader-text\">{this.props.errorMessage ? this.props.errorMessage : defaultError}</p></> : <h2>{this.loadingText()}</h2> }))}\r\n      </div>\r\n  }\r\n}\r\n\r\nexport default Loader;","import './polyhedron.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n// shape counter\r\nlet counter = 0;\r\n\r\n/**\r\n * Polyhedron component\r\n */\r\nclass Polyhedron extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = counter++;\r\n  }\r\n\r\n  /**\r\n   * Renders polyhedron\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={classnames('shape', this.props.type, this.props.animated === this.id && 'animated')}>\r\n        {React.Children.map(this.props.children || [], child => (\r\n          React.cloneElement(child, { parentId: this.id, animationChange: this.props.animationChange })\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport { Polyhedron, counter };","import './polyhedron-face.scss';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * Polyhedron face component\r\n */\r\nclass PolyhedronFace extends React.Component {\r\n  state = { color: {} };\r\n\r\n  /**\r\n   * Subscribes face to animation change handler\r\n   */\r\n  componentDidMount() {\r\n    this.subscription = this.props.animationChange.subscribe({ next: (id) => this.props.parentId === id && this.updateColor() });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes face to animation change handler\r\n   */\r\n  componentWillUnmount() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Updates face's color\r\n   */\r\n  updateColor() {\r\n    const rgba = () => {\r\n      const x = () => Math.floor(Math.random() * 256);\r\n      return `rgba(${x()}, ${x()}, ${x()}, 0.7)`;\r\n    };\r\n    const color = this.props.type === 'rect' ? { backgroundColor: rgba() } : { borderColor: `transparent transparent ${rgba()} transparent` };\r\n    this.setState({ color });\r\n  }\r\n\r\n  /**\r\n   * Renders face\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={classnames('shape-face', this.props.type)} style={this.state.color}></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PolyhedronFace;","import './polyhedrons.scss';\r\nimport React from 'react';\r\nimport { Subject } from 'rxjs';\r\nimport { Polyhedron, counter } from './polyhedron';\r\nimport Face from './polyhedron-face';\r\n\r\n// get random number in [min, max]\r\nconst rand = (min, max) => Math.floor(Math.random() * (max - min)) + min;\r\n\r\n// generate random keyframe for polyhedron animation\r\nconst randKeyframe = () => {\r\n  const fromTransform = 'rotateY(0deg) rotateX(0deg) scale(0)';\r\n  const toTranform = `rotateY(${rand(-400, 400)}deg) rotateX(${rand(-400, 400)}deg) scale(1)`;\r\n  return `\r\n    @-webkit-keyframes spin-shapes {\r\n      from {\r\n        -webkit-transform: ${fromTransform};\r\n      }\r\n      to {\r\n        -webkit-transform: ${toTranform};\r\n      }\r\n    }\r\n    @-moz-keyframes spin-shapes {\r\n      from {\r\n        -webkit-transform: ${fromTransform};\r\n      }\r\n      to {\r\n        -webkit-transform: ${toTranform};\r\n      }\r\n    }\r\n    @keyframes spin-shapes {\r\n      from {\r\n        -webkit-transform: ${fromTransform};\r\n            -ms-transform: ${fromTransform};\r\n                transform: ${fromTransform};\r\n      }\r\n      to {\r\n        -webkit-transform: ${toTranform};\r\n            -ms-transform: ${toTranform};\r\n                transform: ${toTranform};\r\n      }\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * Animation container for polyhedrons\r\n */\r\nclass Polyhedrons extends React.Component {\r\n  state = { animated: null, animationChange: new Subject(), keyframe: '' }\r\n\r\n  /**\r\n   * Starts animation and sets animation interval\r\n   */\r\n  componentDidMount() {\r\n    // begin animation on load\r\n    const startShape = rand(0, counter);\r\n    this.setState({ animated: startShape, keyframe: randKeyframe() }, () => this.state.animationChange.next(startShape))\r\n    \r\n    // interval for updating animated shape\r\n    this.animationInterval = setInterval(() => {\r\n      do {\r\n        var animated = rand(0, counter);\r\n      } while (animated === this.state.animated);\r\n      this.setState({ animated, keyframe: randKeyframe() }, () => this.state.animationChange.next(animated));\r\n    }, 11000);\r\n  }\r\n\r\n  /**\r\n   * Destroys animation interval\r\n   */\r\n  componentWillUnmount() {\r\n    clearInterval(this.animationInterval);\r\n  }\r\n\r\n  /**\r\n   * Renders polyhedrons\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"scene\">\r\n        <div className=\"shapes\">\r\n          <Polyhedron type=\"tetrahedron\" animated={this.state.animated} animationChange={this.state.animationChange}>\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n          </Polyhedron>\r\n          <Polyhedron type=\"triang-prism\" animated={this.state.animated} animationChange={this.state.animationChange}>\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face type=\"rect\" />\r\n          </Polyhedron>\r\n          <Polyhedron type=\"cube\" animated={this.state.animated} animationChange={this.state.animationChange}>\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n            <Face type=\"rect\" />\r\n          </Polyhedron>\r\n          <Polyhedron type=\"octahedron\" animated={this.state.animated} animationChange={this.state.animationChange}>\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n            <Face />\r\n          </Polyhedron>\r\n        </div>\r\n        {this.props.title}\r\n        <style dangerouslySetInnerHTML={{__html: this.state.keyframe}} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Polyhedrons;","import React from 'react';\r\nimport { Section, Typewrite, Paragraph } from '../../components/components';\r\n\r\n/**\r\n * Renders about section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <AboutContainer title=\"U\" headshot=\"V\" message?={{width?: 'W', text?: 'X'}} description?={{links: ['Y', ...], text?: 'Z'}} />\r\n */\r\nconst AboutContainer = (props) => (\r\n  <Section className=\"about\" theme=\"dark\" title={props.title} headshot={props.headshot}>\r\n    {props.message && props.message.width && props.message.text && (\r\n      <Typewrite width={`${props.message.width}px`}>\r\n        <h4>{props.message.text}</h4>\r\n      </Typewrite>\r\n    )}\r\n    <br />\r\n    <br />\r\n    {props.description && props.description.text && (\r\n      <Paragraph links={props.description.links}>{props.description.text}</Paragraph>\r\n    )}\r\n  </Section>\r\n);\r\n\r\nexport default AboutContainer;","import './experience.scss';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Section, Collapsible } from '../../components/components';\r\n\r\n/**\r\n * Renders experience section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <ExperienceContainer title=\"V\" description=\"W\" data={[{details: 'X', icon: 'Y', label?: 'Z'}, ...]} />\r\n */\r\nconst ExperienceContainer = (props) => {\r\n  const colWidth = Math.floor(12 / props.data.length);\r\n  return (\r\n    <Section theme=\"light\" title={props.title} description={props.description}>\r\n      <Collapsible.Grid className=\"grid-experience\">\r\n        <Collapsible.Row>\r\n          {props.data.map((experience, i) => (\r\n            <Collapsible.Col key={i} md={colWidth} body={experience.details}>\r\n              <FontAwesomeIcon icon={experience.icon} />\r\n              {experience.label && <h5>{experience.label}</h5>}\r\n            </Collapsible.Col>\r\n          ))}\r\n        </Collapsible.Row>\r\n      </Collapsible.Grid>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ExperienceContainer;","import React from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport { Section, Codepen } from '../../components/components';\r\n\r\n/**\r\n * Renders pens section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <PensContainer title=\"V\" description=\"W\" entriesPerRow?={X} data?={[{hash: \"Y\", title: \"Z\" }, ...]} />\r\n */\r\nconst PensContainer = (props) => {\r\n  const entriesPerRow = Math.round(props.entriesPerRow || 0);\r\n  const colWidth = Math.floor(12 / props.entriesPerRow);\r\n  return (\r\n    <Section theme=\"light\" title={props.title} description={props.description}>\r\n      <Container>\r\n          {[...Array(Math.ceil(props.data.length / entriesPerRow)).keys()].map((row) => {\r\n            const start = row * entriesPerRow;\r\n            return (\r\n              <Row key={row} className=\"justify-content-md-center\">\r\n                {props.data.slice(start, start + entriesPerRow).map((pen, col) => (\r\n                  <Col key={col} md={colWidth}>\r\n                    <Codepen title={pen.title} hash={pen.hash} user=\"alipianu\" height={300} defaultTab=\"result\" />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            );\r\n          })}\r\n        </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default PensContainer;","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { Section, Project } from '../../components/components';\r\n\r\n/**\r\n * Renders projects section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <ProjectsContainer entriesPerRow?={X} title=\"Y\" description=\"Z\" data={{projects: [...], tagMap: ...}} />\r\n */\r\n\r\n const ProjectsContainer = (props) => {\r\n  const entriesPerRow = Math.round(props.entriesPerRow || 0);\r\n  const colWidth = Math.floor(12 / props.entriesPerRow);\r\n  return (\r\n    <Section theme=\"dark\" title={props.title} description={props.description}>\r\n      <Container>\r\n        {[...Array(Math.ceil(props.data.projects.length / entriesPerRow)).keys()].map((row) => {\r\n          const start = row * entriesPerRow;\r\n          return (\r\n            <Row key={row} className=\"justify-content-md-center\">\r\n              {props.data.projects.slice(start, start + entriesPerRow).map((project, col) => (\r\n                <Col key={col} md={colWidth}>\r\n                  <Project {...{...project, tagMap: props.data.tagMap}} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          );\r\n        })}\r\n      </Container>\r\n    </Section>\r\n  );\r\n };\r\n\r\nexport default ProjectsContainer;","import './skills.scss';\r\nimport React from 'react';\r\nimport { Section, Collapsible, SkillBar } from '../../components/components';\r\n\r\n/**\r\n * Renders skills section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <SkillsContainer entriesPerRow?=\"X\" title=\"X\" description=\"Y\" groups={[{name: 'Z', data: [...]}, ...]} />\r\n */\r\nconst SkillsContainer = (props) => {\r\n  const entriesPerRow = Math.round(props.entriesPerRow || 0);\r\n  const colWidth = Math.floor(12 / entriesPerRow);\r\n  return (\r\n    <Section theme=\"dark\" title={props.title} description={props.description}>\r\n      <Collapsible.Grid className=\"grid-skills\">\r\n        {props.groups.map((group) => (\r\n          [<h6>{group.name}:</h6>, ...[...Array(Math.ceil(group.data.length / entriesPerRow)).keys()].map((row) => {\r\n            const start = row * entriesPerRow;\r\n            return (\r\n              <Collapsible.Row key={row}>\r\n                {group.data.slice(start, start + entriesPerRow).map((skill, col) => (\r\n                  <Collapsible.Col key={col} md={colWidth} body={\r\n                    !Array.isArray(skill.details) || !skill.details.length ? skill.details :\r\n                      <ul>{skill.details.map((detail, i) => <li key={i}>{detail}</li>)}</ul>\r\n                  }>\r\n                    <SkillBar label={skill.label} level={skill.level} />\r\n                  </Collapsible.Col>\r\n                ))}\r\n              </Collapsible.Row>\r\n            );\r\n          })]\r\n        ))}\r\n      </Collapsible.Grid>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default SkillsContainer;","import './splash.scss';\r\nimport React from 'react';\r\nimport { Splash } from '../../components/components';\r\n\r\n/**\r\n * Renders splash section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <SplashContainer name?=\"X\" title?=\"Y\" src=\"Z\" />\r\n */\r\nconst SplashContainer = (props) => (\r\n  <Splash src={props.src}>\r\n    <h1 id=\"name\">{props.name || ''}</h1>\r\n    <p id=\"title\">{props.title || ''}</p>\r\n  </Splash>\r\n);\r\n\r\nexport default SplashContainer;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Timeline, Section } from '../../components/components';\r\n\r\n/**\r\n * Renders timeline section\r\n * @param {*} props - the component's properties\r\n * \r\n * usage: <TimelineContainer title=\"V\" description=\"W\" data={[{year?: 'X', color?: 'Y', entries: [{shape: ('circle' || *), content: 'Z'}, ...]}]} />\r\n */\r\nconst TimelineContainer = (props) => (\r\n  <Section theme=\"light\" title={props.title} description={props.description}>\r\n    <Container>\r\n      <Timeline data={props.data} />\r\n    </Container>\r\n  </Section>\r\n);\r\n\r\nexport default TimelineContainer;","import './App.scss';\r\nimport React from 'react';\r\nimport { Static } from './models/models';\r\nimport { Loader, Footer, LoadingAnimation } from './components/components';\r\nimport {\r\n  SplashContainer,\r\n  AboutContainer,\r\n  TimelineContainer,\r\n  SkillsContainer,\r\n  ExperienceContainer,\r\n  ProjectsContainer,\r\n  PensContainer,\r\n} from './containers/containers';\r\n\r\n/**\r\n * App component\r\n */\r\nclass App extends React.Component {\r\n  _contentID = 0;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: null, errorMessage: 'api.alexlipianu.com is currently unavailable or cannot be reached' };\r\n    this.loader = this.loader.bind(this);\r\n    this.onSuccess = this.onSuccess.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Fetch app data\r\n   */\r\n  loader() {\r\n    return Static.getContent(this._contentID);\r\n  }\r\n\r\n  /**\r\n   * Load data into containers\r\n   */\r\n  onSuccess({data}) {\r\n    this.setState({data});\r\n  }\r\n\r\n  /**\r\n   * Renders app\r\n   */\r\n  render() {\r\n    return (\r\n      <Loader loader={this.loader} animation={LoadingAnimation} onSuccess={this.onSuccess} errorMessage={this.state.errorMessage}>\r\n        {this.state.data && <>\r\n          <SplashContainer {...this.state.data.splash} />\r\n          <AboutContainer {...this.state.data.about} />\r\n          <TimelineContainer {...this.state.data.timeline} />\r\n          <SkillsContainer {...this.state.data.skills} />\r\n          <ExperienceContainer {...this.state.data.experience} />\r\n          <ProjectsContainer {...this.state.data.projects} />\r\n          <PensContainer {...this.state.data.pens} />\r\n          <Footer />\r\n        </>}\r\n      </Loader>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport 'intersection-observer';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// build font awesome library\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCogs, faCaretDown, faGlobe, faGamepad, faDownload, faEnvelope, faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub, faLinkedin, faCodepen } from '@fortawesome/free-brands-svg-icons'\r\nlibrary.add(\r\n  // solid\r\n  faCogs, faCaretDown, faGlobe, faGamepad, faDownload, faEnvelope, faStar,\r\n  // brands\r\n  faGithub, faLinkedin, faCodepen\r\n);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}